+--------------------+
|                    |
|   Pass 1 Visitor   |
|                    |
+--------------------+
=== Pass1Visitor(): symtab stack initialized.
=== visitRoot: inta=9;printf("%d",a);printf("%d%d%d%d",a.b[3],a.b[2],a.b[1],a.b[0]);a.b[3]=0;printf("%d",a);a.b[1]=1;printf("%d",a);
=== visitVariableDefs: inta=9
=== visitVariableID: a
=== visitUnsignedNumberExpr: 9
=== visitNumber: 9
=== visitStrExpr: "%d"
=== visitVariableExpr: a
=== visitVariable: a
=== visitStrExpr: "%d%d%d%d"
=== visitBitIndexExpr: a.b[3]
=== visitVariable: a
=== visitUnsignedNumberExpr: 3
=== visitNumber: 3
=== visitBitIndexExpr: a.b[2]
=== visitVariable: a
=== visitUnsignedNumberExpr: 2
=== visitNumber: 2
=== visitBitIndexExpr: a.b[1]
=== visitVariable: a
=== visitUnsignedNumberExpr: 1
=== visitNumber: 1
=== visitBitIndexExpr: a.b[0]
=== visitVariable: a
=== visitUnsignedNumberExpr: 0
=== visitNumber: 0
=== visitVariable: a
=== visitUnsignedNumberExpr: 3
=== visitNumber: 3
=== visitUnsignedNumberExpr: 0
=== visitNumber: 0
=== visitStrExpr: "%d"
=== visitVariableExpr: a
=== visitVariable: a
=== visitVariable: a
=== visitUnsignedNumberExpr: 1
=== visitNumber: 1
=== visitUnsignedNumberExpr: 1
=== visitNumber: 1
=== visitStrExpr: "%d"
=== visitVariableExpr: a
=== visitVariable: a
=== visitRoot: Printing xref table.

===== CROSS-REFERENCE TABLE =====

*** PROGRAM bit_ops ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
a               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
+--------------------+
|                    |
|   Pass 2 Visitor   |
|                    |
+--------------------+
	visitRoot      inta=9;printf("%d",a);printf("%d%d%d%d",a.b[3],a.b[2],a.b[1],a.b[0]);a.b[3]=0;printf("%d",a);a.b[1]=1;printf("%d",a);
	visitVariableDefinta=9
	visitNumber      9
	visitPrintfStatementprintf("%d",a);
	visitStr"%d"
	visitVariableExpr      a
I
	visitPrintfStatementprintf("%d%d%d%d",a.b[3],a.b[2],a.b[1],a.b[0]);
	visitStr"%d%d%d%d"
isitBitIndexExpra.b[3]
	visitNumber      3
isitBitIndexExpra.b[2]
	visitNumber      2
isitBitIndexExpra.b[1]
	visitNumber      1
isitBitIndexExpra.b[0]
	visitNumber      0
	visitBitIndexAssignmenta.b[3]=0
	visitNumber      0
	visitNumber      3
	visitNumber      3
	visitPrintfStatementprintf("%d",a);
	visitStr"%d"
	visitVariableExpr      a
I
	visitBitIndexAssignmenta.b[1]=1
	visitNumber      1
	visitNumber      1
	visitNumber      1
	visitPrintfStatementprintf("%d",a);
	visitStr"%d"
	visitVariableExpr      a
I
