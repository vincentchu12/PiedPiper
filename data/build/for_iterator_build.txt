+--------------------+
|                    |
|   Pass 1 Visitor   |
|                    |
+--------------------+
=== Pass1Visitor(): symtab stack initialized.
=== visitRoot: inta[4]={94,127,47,298};for(intidx;intval:a){printf("The value at index: %d is %d",idx,val);}stringc[4]={"this","is","our","language"};for(intindex;stringvalue:c){printf("The value at index: %d is %s",index,value);}
=== visitArrayDefs: inta[4]={94,127,47,298}
=== visitVariableID: a
=== visitNumber: 4
=== visitUnsignedNumberExpr: 94
=== visitNumber: 94
=== visitUnsignedNumberExpr: 127
=== visitNumber: 127
=== visitUnsignedNumberExpr: 47
=== visitNumber: 47
=== visitUnsignedNumberExpr: 298
=== visitNumber: 298
=== visitVariableDeclarations: intidx
=== visitVariableID: idx
=== visitVariableDeclarations: intval
=== visitVariableID: val
=== visitVariable: a
=== visitStrExpr: "The value at index: %d is %d"
=== visitVariableExpr: idx
=== visitVariable: idx
=== visitVariableExpr: val
=== visitVariable: val
=== visitArrayDefs: stringc[4]={"this","is","our","language"}
=== visitVariableID: c
=== visitNumber: 4
=== visitStringExpr: "this"
=== visitStrExpr: "this"
=== visitStringExpr: "is"
=== visitStrExpr: "is"
=== visitStringExpr: "our"
=== visitStrExpr: "our"
=== visitStringExpr: "language"
=== visitStrExpr: "language"
=== visitVariableDeclarations: intindex
=== visitVariableID: index
=== visitVariableDeclarations: stringvalue
=== visitVariableID: value
=== visitVariable: c
=== visitStrExpr: "The value at index: %d is %s"
=== visitVariableExpr: index
=== visitVariable: index
=== visitVariableExpr: value
=== visitVariable: value
=== visitRoot: Printing xref table.

===== CROSS-REFERENCE TABLE =====

*** PROGRAM for_iterator ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
a               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
c               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = char
idx             
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
index           
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
val             
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = integer
value           
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = char
+--------------------+
|                    |
|   Pass 2 Visitor   |
|                    |
+--------------------+
	visitRoot      inta[4]={94,127,47,298};for(intidx;intval:a){printf("The value at index: %d is %d",idx,val);}stringc[4]={"this","is","our","language"};for(intindex;stringvalue:c){printf("The value at index: %d is %s",index,value);}
	visitArrayDefinta[4]={94,127,47,298}
	visitNumber      4
	visitNumber      94
	visitNumber      127
	visitNumber      47
	visitNumber      298
	visitForStatement for(intidx;intval:a){printf("The value at index: %d is %d",idx,val);}
	visitPrintfStatementprintf("The value at index: %d is %d",idx,val);
	visitStr"The value at index: %d is %d"
	visitVariableExpr      idx
I
	visitVariableExpr      val
I
	visitArrayDefstringc[4]={"this","is","our","language"}
	visitNumber      4
	visitStr"this"
	visitStr"is"
	visitStr"our"
	visitStr"language"
	visitForStatement for(intindex;stringvalue:c){printf("The value at index: %d is %s",index,value);}
	visitPrintfStatementprintf("The value at index: %d is %s",index,value);
	visitStr"The value at index: %d is %s"
	visitVariableExpr      index
I
	visitVariableExpr      value
Ljava/lang/String;
